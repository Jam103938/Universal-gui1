local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "Normal Script", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionConfig"})

local Tab1 = Window:MakeTab({
    Name = "TP To Players",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local Section1 = Tab1:AddSection({
    Name = "Teleport:"
})

local plrs = game.Players

-- Fetch all player names
local function getPlayerNames()
    local playerNames = {}
    for _, player in ipairs(plrs:GetPlayers()) do
        table.insert(playerNames, player.Name)
    end
    return playerNames
end

local playerNames = getPlayerNames()

Tab1:AddDropdown({
    Name = "Players",
    Default = playerNames[1] or "No Players",
    Options = playerNames,
    Callback = function(selectedPlayerName)
        local localPlayer = game.Players.LocalPlayer
        local targetPlayer = plrs:FindFirstChild(selectedPlayerName)

        local function teleportToPlayer(targetPlayer)
            
            if localPlayer.Character and targetPlayer and targetPlayer.Character then
                
                local playerRoot = localPlayer.Character:FindFirstChild("HumanoidRootPart")
                local targetRoot = targetPlayer.Character:FindFirstChild("HumanoidRootPart")

                if playerRoot and targetRoot then
                    -- Teleport the player to the target player's position
                    playerRoot.CFrame = targetRoot.CFrame
                end
            end
        end

        teleportToPlayer(targetPlayer)
    end
})

local MainTab = Window:MakeTab({
    Name = "Main",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local isAutoTeleportEnabled = false
local isInfiniteJumpEnabled = false

local function autoTeleportCheckpoints()
    local checkpoints = workspace:WaitForChild("Checkpoints"):GetChildren()
    table.sort(checkpoints, function(a, b)
        return tonumber(a.Name) < tonumber(b.Name)
    end)
    
    for _, checkpoint in ipairs(checkpoints) do
        if isAutoTeleportEnabled then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = checkpoint.CFrame
            wait(1)  -- Add a delay between teleports to avoid issues
        else
            break
        end
    end
end

local function onJumpRequest()
    if isInfiniteJumpEnabled then
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        
        if humanoid then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end

MainTab:AddToggle({
    Name = "Infinite Jump",
    Default = false,
    Callback = function(state)
        isInfiniteJumpEnabled = state
    end
})

MainTab:AddToggle({
    Name = "Auto Teleport to Checkpoints",
    Default = false,
    Callback = function(state)
        isAutoTeleportEnabled = state
        if isAutoTeleportEnabled then
            autoTeleportCheckpoints()
        end
    end
})

local walkSpeedSection = MainTab:AddSection({
    Name = "Walk Speed:"
})

local jumpPowerSection = MainTab:AddSection({
    Name = "Jump Power:"
})

walkSpeedSection:AddTextbox({
    Name = "Enter Walk Speed",
    Default = "16",
    TextDisappear = false,
    Callback = function(value)
        local speed = tonumber(value)
        if speed then
            local localPlayer = game.Players.LocalPlayer
            if localPlayer.Character and localPlayer.Character:FindFirstChild("Humanoid") then
                localPlayer.Character.Humanoid.WalkSpeed = speed
            end
        end
    end
})

jumpPowerSection:AddTextbox({
    Name = "Enter Jump Power",
    Default = "50",
    TextDisappear = false,
    Callback = function(value)
        local power = tonumber(value)
        if power then
            local localPlayer = game.Players.LocalPlayer
            if localPlayer.Character and localPlayer.Character:FindFirstChild("Humanoid") then
                localPlayer.Character.Humanoid.JumpPower = power
            end
        end
    end
})

game:GetService("UserInputService").JumpRequest:Connect(onJumpRequest)

OrionLib:Init()
