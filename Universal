local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/thanhdat4461/OrionMoblie/main/source')))()
local Window = OrionLib:MakeWindow({ Name = "Jam Hub", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest" })

local PlayerTab = Window:MakeTab({
    Name = "Player tab",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local FindObjectsTab = Window:MakeTab({
    Name = "Find All Objects Here",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

OrionLib:MakeNotification({
    Name = "Support me",
    Content = "Support my script or dono me some robux",
    Image = "rbxassetid://4483345998",
    Time = 15
})

local Section = PlayerTab:AddSection({
    Name = "Teleport"
})

local plrs = game.Players

local function getPlayerNames()
    local playerNames = {}
    for _, player in ipairs(plrs:GetPlayers()) do
        table.insert(playerNames, player.Name)
    end
    return playerNames
end

local playerNames = getPlayerNames()

PlayerTab:AddDropdown({
    Name = "Select Player",
    Default = playerNames[1] or "No Players",
    Options = playerNames,
    Callback = function(selectedPlayerName)
        local localPlayer = game.Players.LocalPlayer
        local targetPlayer = plrs:FindFirstChild(selectedPlayerName)

        local function teleportToPlayer(targetPlayer)
            if localPlayer.Character and targetPlayer and targetPlayer.Character then
                local playerRoot = localPlayer.Character:FindFirstChild("HumanoidRootPart")
                local targetRoot = targetPlayer.Character:FindFirstChild("HumanoidRootPart")

                if playerRoot and targetRoot then
                    playerRoot.CFrame = targetRoot.CFrame
                end
            end
        end

        teleportToPlayer(targetPlayer)
    end
})

plrs.PlayerAdded:Connect(function(player)
    table.insert(playerNames, player.Name)
end)

plrs.PlayerRemoving:Connect(function(player)
    for i, name in ipairs(playerNames) do
        if name == player.Name then
            table.remove(playerNames, i)
            break
        end
    end
end)

local SectionWalkSpeed = PlayerTab:AddSection({
    Name = "Walk Speed"
})

local SectionJumpPower = PlayerTab:AddSection({
    Name = "Jump Power"
})

SectionWalkSpeed:AddTextbox({
    Name = "Set Walk Speed",
    Default = "",
    TextDisappear = false,
    Callback = function(value)
        local speed = tonumber(value)
        if speed then
            local localPlayer = game.Players.LocalPlayer
            if localPlayer.Character and localPlayer.Character:FindFirstChild("Humanoid") then
                localPlayer.Character.Humanoid.WalkSpeed = speed
            end
        end
    end
})

SectionJumpPower:AddTextbox({
    Name = "Set Jump Power",
    Default = "",
    TextDisappear = false,
    Callback = function(value)
        local power = tonumber(value)
        if power then
            local localPlayer = game.Players.LocalPlayer
            if localPlayer.Character and localPlayer.Character:FindFirstChild("Humanoid") then
                localPlayer.Character.Humanoid.JumpPower = power
            end
        end
    end
})

local infiniteJumpEnabled = false

PlayerTab:AddToggle({
    Name = "Infinite Jump",
    Default = false,
    Callback = function(value)
        infiniteJumpEnabled = value
    end    
})

game:GetService("UserInputService").JumpRequest:Connect(function()
    if infiniteJumpEnabled then
        local localPlayer = game.Players.LocalPlayer
        if localPlayer.Character and localPlayer.Character:FindFirstChildOfClass("Humanoid") then
            localPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
        end
    end
end)

-- Disable sitting
local function disableSitting()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
end

disableSitting()

game.Players.LocalPlayer.CharacterAdded:Connect(disableSitting)

-- ESP Functionality
local function createESP(part)
    local espBox = Instance.new("BoxHandleAdornment")
    espBox.Adornee = part
    espBox.Size = part.Size + Vector3.new(0.1, 0.1, 0.1)
    espBox.Color3 = Color3.new(1, 0, 0)
    espBox.Transparency = 0.5
    espBox.ZIndex = 10
    espBox.AlwaysOnTop = true
    espBox.Parent = part

    local billboardGui = Instance.new("BillboardGui")
    billboardGui.Adornee = part
    billboardGui.Size = UDim2.new(0, 100, 0, 50)
    billboardGui.StudsOffset = Vector3.new(0, 3, 0)
    billboardGui.AlwaysOnTop = true

    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = part.Name
    textLabel.TextColor3 = Color3.new(1, 1, 1)
    textLabel.TextScaled = true
    textLabel.TextSize = 8
    textLabel.Parent = billboardGui

    billboardGui.Parent = part
end

local function addESPToParts(folder)
    local parts = folder:GetChildren()

    for _, part in ipairs(parts) do
        createESP(part)
    end
end

-- New Section for Auto Tween in Find Objects Tab
local SectionAutoTween = FindObjectsTab:AddSection({
    Name = "Auto Find All Koalas"
})

local function autoFindAllKoalas()
    local TweenService = game:GetService("TweenService")
    local Players = game:GetService("Players")

    local player = Players.LocalPlayer
    local humanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    local objectsToFind = workspace:WaitForChild("ObjectsToFind")
    local parts = objectsToFind:GetChildren()

    local tweenDuration = 0.5 -- Duration to move to each part (0.5 seconds)
    local waitDuration = 0.5 -- Time to wait at each part (0.5 seconds)

    local function tweenToPart(targetPart)
        if humanoidRootPart then
            local targetCFrame = targetPart.CFrame
            local tweenInfo = TweenInfo.new(tweenDuration, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
            local tween = TweenService:Create(humanoidRootPart, tweenInfo, {CFrame = targetCFrame})

            tween:Play()
            tween.Completed:Wait()
        end
    end

    local function moveToParts()
        while true do
            for _, part in ipairs(parts) do
                tweenToPart(part)
                wait(waitDuration)
            end
        end
    end

    moveToParts()
end

SectionAutoTween:AddToggle({
    Name = "Enable Auto Find All Koalas",
    Default = false,
    Callback = function(enabled)
        if enabled then
            autoFindAllKoalas()
        end
    end
})

local SectionFindFlags = FindObjectsTab:AddSection({
    Name = "Find All Flags"
})

SectionFindFlags:AddToggle({
    Name = "Enable ESP for Flags",
    Default = false,
    Callback = function(enabled)
        if enabled then
            addESPToParts(workspace:WaitForChild("ToFind"))
        end
    end
})

local function autoFindAllFlags()
    local TweenService = game:GetService("TweenService")
    local Players = game:GetService("Players")

    local player = Players.LocalPlayer
    local humanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    local toFind = workspace:WaitForChild("ToFind")
    local parts = toFind:GetChildren()

    local tweenDuration = 0.5 -- Duration to move to each part (0.5 seconds)
    local waitDuration = 0.5 -- Time to wait at each part (0.5 seconds)

    local function tweenToPart(targetPart)
        if humanoidRootPart then
            local targetCFrame = targetPart.CFrame
            local tweenInfo = TweenInfo.new(tweenDuration, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
            local tween = TweenService:Create(humanoidRootPart, tweenInfo, {CFrame = targetCFrame})

            tween:Play()
            tween.Completed:Wait()
        end
    end

    local function moveToParts()
        while true do
            for _, part in ipairs(parts) do
                tweenToPart(part)
                wait(waitDuration)
            end
        end
    end

    moveToParts()
end

SectionFindFlags:AddToggle({
    Name = "Enable Auto Find All Flags",
    Default = false,
    Callback = function(enabled)
        if enabled then
            autoFindAllFlags()
        end
    end
})
--Esp For Player here
local playerESPEnabled = false

PlayerTab:AddToggle({
    Name = "Enable ESP for Players",
    Default = false,
    Callback = function(enabled)
        playerESPEnabled = enabled
        if playerESPEnabled then
            local function createESP(player)
                local highlight = Instance.new("Highlight")
                highlight.Adornee = player.Character
                highlight.Parent = player.Character
                highlight.FillColor = Color3.new(0, 0, 1) -- Red color
                highlight.OutlineColor = Color3.new(2, 2, 2) -- White outline
                highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
            end

            local function addESPToPlayers()
                for _, player in pairs(game:GetService("Players"):GetPlayers()) do
                    if player ~= game.Players.LocalPlayer and player.Character then
                        createESP(player)
                    end
                end
            end

            game:GetService("Players").PlayerAdded:Connect(function(player)
                player.CharacterAdded:Connect(function(character)
                    createESP(player)
                end)
            end)

            addESPToPlayers()

            while playerESPEnabled do
                addESPToPlayers()
                wait(0.1)
            end
        else
            for _, player in pairs(game:GetService("Players"):GetPlayers()) do
                if player ~= game.Players.LocalPlayer and player.Character then
                    local highlight = player.Character:FindFirstChildOfClass("Highlight")
                    if highlight then
                        highlight:Destroy()
                    end
                end
            end
        end
    end
})
